stages:
  - pre_test
  - test
  - deploy

lint:
  image: frolvlad/alpine-python2
  stage: pre_test
  before_script:
    - apk update && apk add make
    - pip install flake8
  script:
    - make lint

test_2:
  image: frolvlad/alpine-python2
  stage: test
  before_script:
     # Authenticate using the keytab:
    - apk update && apk add make krb5 bash krb5-conf krb5-libs krb5-dev gcc python2-dev musl-dev libxml2-dev py-lxml
    - cp krb5.conf /etc/krb5.conf
    - bash -c "base64 -d <(echo \"$KRB_KEYTAB_CONTENTS\") > $KRB_USERNAME.keytab"
    - kinit -k -t $KRB_USERNAME.keytab $KRB_USERNAME@CERN.CH
  script:
    - pip install -r requirements.txt
    - pip install -r ci-deps.txt
    - pytest
    - python setup.py install
    - ./test_get_cookie.sh

test_3:
  stage: test
  image: frolvlad/alpine-python3
  before_script:
    - apk update && apk add make krb5 bash krb5-conf krb5-libs krb5-dev gcc python3-dev musl-dev libxml2-dev py-lxml
    - cp krb5.conf /etc/krb5.conf
     # Authenticate using the keytab:
    - bash -c "base64 -d <(echo \"$KRB_KEYTAB_CONTENTS\") > $KRB_USERNAME.keytab"
    - kinit -k -t $KRB_USERNAME.keytab $KRB_USERNAME@CERN.CH
  script:
    - pip3 install -r requirements.txt
    - pip3 install -r ci-deps.txt
    - pytest
    - python3 setup.py install
    - ./test_get_cookie.sh

deploy:
  stage: deploy
  image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7

  # only:
  #   - tags

  before_script:
    - bash -c "base64 -d <(echo \"$KRB_KOJI_KEYTAB\") > $KRB_KOJI_USERNAME.keytab"
#    - kinit -k -t $KRB_KOJI_KEYTAB.keytab $KRB_KOJI_USERNAME@CERN.CH
    - yum install -y koji
  script:
    - >
      koji --keytab=$KRB_KOJI_KEYTAB.keytab
       --principal=$KRB_KOJI_USERNAME@CERN.CH
       --authtype=kerberos
       --server=http://koji.cern.ch/kojihub
       --weburl=http://koji.cern.ch/koji
       --topurl=http://koji.cern.ch/kojifiles list-permissions --mine
    # - make build
# rpm:
#   image: ubuntu:latest
#   stage: build
#   only:
#     - tags

#   artifacts:
#     paths:
#       - dist/*.rpm
#     name: "dist-$CI_BUILD_REF_NAME"

#   script:
#     - apt-get update && apt-get install -y rpm libxslt-dev libxml2-dev python-pip libkrb5-dev
#     - pip install -r requirements.txt
#     - python setup.py bdist --format=rpm

# install_rpm:
#   stage: deploy
#   image: cern/cc7-base
#   only:
#     - tags

#   before_script:
#     - yum -y update
#     - yum install -y krb5-workstation krb5-libs
#     # Decode the base64-encoded keytab and store it in dbstoragemon.keytab.
#     - base64 --decode <(echo "$KRB_KEYTAB_CONTENTS") > $KRB_USERNAME.keytab
#     # Authenticate using the keytab:
#     - yum install python-requests-kerberos python-requests python2-future
#     - kinit $KRB_USERNAME@CERN.CH -k -t $KRB_USERNAME.keytab

#   script:
#     - rpm -i dist/python-cern-sso-$CI_BUILD_REF_NAME-1.noarch.rpm
#     - cern-get-sso-cookie.py --help
#     - cern-get-sso-cookie.py --kerberos --verbose --url https://dbnas-storage-docs.web.cern.ch
#     - grep -q "dbnas-storage-docs.web.cern.ch" cookies.txt
