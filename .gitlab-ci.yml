stages:
  - pre_test
  - test
  - build
  - deploy

lint:
  image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7
  stage: pre_test
  before_script:
    - yum install -y python-pip python-virtualenv
    - virtualenv -p python2.7 venv
  script:
    - source venv/bin/activate
    - pip install -r ci-deps.txt
    - flake8 cern_sso.py bin/cern-get-sso-cookie.py

test_2:
  image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7
  stage: test
  before_script:
    - yum install -y python-pip krb5-workstation krb5-libs krb5-devel make rpm-build make tar pytest zlib-devel bzip2-devel readline-devel openssl-devel sqlite-devel
    - curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
    - echo 'export PATH="/opt/app-root/jenkins/.pyenv/bin:$PATH"' >> ~/.bash_profile
    - source ~/.bash_profile
    - pyenv deactivate
    - pyenv version
    - eval "$(pyenv init -)"
    - pyenv install 2.7.12
    - pyenv global 2.7.12
    - eval "$(pyenv virtualenv-init -)"
    - pyenv virtualenv 2.7.12 test-python2

  script:
    - pyenv activate test-python2
    - pip install -r requirements.txt
    - pip install -r ci-deps.txt
    - pytest
    - pyenv deactivate

test_3:
  stage: test
  image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7
  before_script:
    - yum install -y python34-pip python-virtualenv krb5-workstation krb5-libs krb5-devel make rpm-build make tar python2-devel python-setuptools python-py pytest python34-devel python34-setuptools zlib-devel bzip2-devel readline-devel openssl-devel sqlite-devel
    - curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
    - echo 'export PATH="/opt/app-root/jenkins/.pyenv/bin:$PATH"' >> ~/.bash_profile
    - source ~/.bash_profile
    - eval "$(pyenv init -)"
    - pyenv install 3.6.0
    - pyenv global 3.6.0
    - eval "$(pyenv virtualenv-init -)"
    - pyenv virtualenv 3.6.0 test-python3
  script:
    - pyenv activate test-python3
    - python --version
    - pip --version
    - pip install -r requirements.txt
    - pip install -r ci-deps.txt
    - pytest
    - pyenv deactivate

# rpm:
#   image: ubuntu:latest
#   stage: build
#   only:
#     - tags

#   artifacts:
#     paths:
#       - dist/*.rpm
#     name: "dist-$CI_BUILD_REF_NAME"

#   script:
#     - apt-get update && apt-get install -y rpm libxslt-dev libxml2-dev python-pip libkrb5-dev
#     - pip install -r requirements.txt
#     - python setup.py bdist --format=rpm

# install_rpm:
#   stage: deploy
#   image: cern/cc7-base
#   only:
#     - tags

#   before_script:
#     - yum -y update
#     - yum install -y krb5-workstation krb5-libs
#     # Decode the base64-encoded keytab and store it in dbstoragemon.keytab.
#     - base64 --decode <(echo "$KRB_KEYTAB_CONTENTS") > $KRB_USERNAME.keytab
#     # Authenticate using the keytab:
#     - yum install python-requests-kerberos python-requests python2-future
#     - kinit $KRB_USERNAME@CERN.CH -k -t $KRB_USERNAME.keytab

#   script:
#     - rpm -i dist/python-cern-sso-$CI_BUILD_REF_NAME-1.noarch.rpm
#     - cern-get-sso-cookie.py --help
#     - cern-get-sso-cookie.py --kerberos --verbose --url https://dbnas-storage-docs.web.cern.ch
#     - grep -q "dbnas-storage-docs.web.cern.ch" cookies.txt
